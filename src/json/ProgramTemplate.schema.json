{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"title": "Program Template Builder",
	"description": "Build your program using the magic of magic!",
	"type": "object",
	"properties": {
		"id": {
			"type": "string",
			"title": "Program Template ID",
			"description": "A unique identifier for this program template"
		},
		"name": {
			"type": "string",
			"title": "Program Name",
			"description": "A human-readable name for the program. Dispayed in the SaaSquatch Portal during Program setup."
		},
		"summary": {
			"type": "string",
			"title": "Program Summary",
			"description": "A human-readable summary of the program. Dispayed in the SaaSquatch Portal during Program setup."
		},
		"longDescription": {
			"type": "string",
			"options": {
				"expand_height": true
			},
			"title": "Program Long Description",
			"description": "A long-form article that sells the benefits of this program. Dispayed in the SaaSquatch Portal during Program setup."
		},
		"rewards": {
			"type": "array",
			"format": "tabs",
			"title": "Rewards",
			"description": "A list of all the possible types of rewards this program will give. Your business logic will trigger these based on key",
			"items": {
				"headerTemplate": "{{ self.name }}",
				"$ref": "#/definitions/RewardType"
			}
		},
		"emails": {
			"type": "array",
			"format": "tabs",
			"title": "Emails",
			"description": "A list of all the possible types of emails this program will send. Your business logic will trigger these based on key",
			"items": {
				"headerTemplate": "{{ self.name }}",
				"$ref": "#/definitions/EmailType"
			}
		},
		"widgets": {
			"type": "array",
			"format": "tabs",
			"title": "Widgets",
			"description": "A list of all the possible types of widgets this program will display. Your business logic will trigger these based on key",
			"items": {
				"headerTemplate": "{{ self.name }}",
				"$ref": "#/definitions/WidgetType"
			}
		},
		"rules": {
			"title": "Business Rule Variables",
			"description": "The business rule variables define a JSON schema of the possible configuration points in the business logic.",
			"type": "object",
			"options": {
				"hidden": true
			}
		},
		"rulesUISchema": {
			"title": "Business Rule Variables",
			"description": "The business rule variables define a JSON schema of the possible configuration points in the business logic.",
			"type": "object",
			"options": {
				"hidden": true
			}
		},
		"url": {
			"type": "string",
			"title": "Webtask URL",
			"description": "The URL for webtask."
		},
		"schedule": {
			"title": "Recurring schedule",
			"type": "object",
			"properties": {
				"userFilter": {
					"type": "object",
					"title": "User Filter",
					"description": "This should be a GraphQL-compatible query json object"
				},
				"periodInHours": {
					"type": "number",
					"description": "Your program logic will be run on this schedule."
				}
			}
		},
		"schedules": {
			"type": "array",
			"format": "tabs",
			"title": "Schedules",
			"description": "A list of all the possible types of schedules this program will run. Your business logic will trigger these based on key",
			"items": {
				"headerTemplate": "{{ self.name }}",
				"$ref": "#/definitions/ScheduleType"
			}
		},
		"sharing": {
			"type": "object",
			"properties": {
				"enabled": {
					"type": "boolean",
					"description": "Whether this program supports referrals"
				},
				"linksConfig": {
					"type": "object",
					"properties": {
						"defaults": {
							"oneOf": [{
									"type": "string",
									"title": "Default Template Id"
								},
								{
									"$ref": "ProgramMessages.schema.json#"
								}
							]
						}
					}
				}
			}
		},
		"trigger": {
			"type": "object",
			"properties": {
				"eventKeys": {
					"type": "array",
					"description": "The user event keys this program listens to",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"userMetrics": {
			"type": "array",
			"title": "Program User Metrics",
			"description": "Custom metrics defined by this program that will only be activated when the program is live",
			"items": {
				"$ref": "UserMetric.schema.json#"
			}
		}
	},
	"additionalProperties": false,
	"definitions": {
		"EmailType": {
			"title": "Email Type",
			"description": "A type of email that is given by this program.",
			"type": "object",
			"properties": {
				"key": {
					"type": "string",
					"title": "Key",
					"description": "A unique key to identify this email type. Only numbers and latin characers are allowed. Email types must be unique within the scope of a program. e.g. `RewardCreatedEmail`",
					"pattern": "[a-zA-Z0-9]+",
					"default": "rewardCreatedEmail"
				},
				"name": {
					"type": "string",
					"title": "Name",
					"description": "A human-readable name for the email type that gets displayed in the SaaSquatch portal during program setup. e.g. `Reward Created Email`",
					"default": "Reward Created Email"
				},
				"description": {
					"type": "string",
					"title": "Description",
					"description": "A human-readable description that explains this email type. Displayed in the SaaSquatch portal during program setup. e.g. `This email is sent when a new reward is created by this program`",
					"default": "We send this email when a new reward is created by this program"
				},
				"defaults": {
					"oneOf": [{
							"type": "string",
							"title": "Default Template Id"
						},
						{
							"$ref": "SimpleEmail.schema.json#"
						},
						{
							"$ref": "HtmlEmail.schema.json#"
						}
					]
				}
			}
		},
		"RewardType": {
			"title": "Reward Type",
			"description": "A type of reward that is given by this program.",
			"type": "object",
			"properties": {
				"key": {
					"type": "string",
					"title": "Key",
					"description": "A unique key to identify this reward type. Only numbers and latin characers are allowed. Reward types must be unique within the scope of a program. e.g. `FirstPurchaseReward`",
					"pattern": "[a-zA-Z0-9]+",
					"default": "firstPurchaseReward"
				},
				"name": {
					"type": "string",
					"title": "Name",
					"description": "A human-readable name for the reward type that gets displayed in the SaaSquatch portal during program setup. e.g. `First Purchase Reward`",
					"default": "First Purchase Reward"
				},
				"description": {
					"type": "string",
					"title": "Description",
					"description": "A human-readable description that explains this reward type. Displayed in the SaaSquatch portal during program setup. e.g. `This reward is given to people when they make their first purchase.`",
					"default": "This reward is given to people when they make their first purchase."
				}
			}
		},
		"WidgetType": {
			"title": "Widget Type",
			"description": "A type of widget that is displayed by this program.",
			"type": "object",
			"properties": {
				"key": {
					"type": "string",
					"title": "Key",
					"description": "A unique key to identify this widget type. Only numbers and latin characers are allowed. Widget types must be unique within the scope of a program. e.g. `referrerWidget`",
					"pattern": "[a-zA-Z0-9]+",
					"default": "referrerWidget"
				},
				"name": {
					"type": "string",
					"title": "Name",
					"description": "A human-readable name for the widget type that gets displayed in the SaaSquatch portal during program setup. e.g. `Referrer Widget`",
					"default": "Referrer Widget"
				},
				"description": {
					"type": "string",
					"title": "Description",
					"description": "A human-readable description that explains this widget type. Displayed in the SaaSquatch portal during program setup. e.g. `This widget is displayed to referrer users.`",
					"default": "This widget is displayed to referrer users."
				},
				"defaults": {
					"oneOf": [{
							"type": "string",
							"title": "Default Template Id"
						},
						{
							"$ref": "HtmlWidget.schema.json#"
						}
					]
				}
			}
		},
		"ScheduleType": {
			"title": "Schedule Type",
			"description": "A type of schedule that is run by this program.",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"title": "Type",
					"description": "The type of this schedule.",
					"enum": ["USER", "REWARD"]
				},
				"key": {
					"type": "string",
					"title": "Key",
					"description": "A unique key to identify this schedule type. Only numbers and latin characers are allowed. Schedule types must be unique within the scope of a program. e.g. `default`",
					"pattern": "[a-zA-Z0-9]+",
					"default": "default"
				},
				"periodInHours": {
					"type": "integer",
					"title": "Period in Hours",
					"description": "The period of this schedule in hours."
				},
				"filter": {
					"type": "object",
					"title": "Filter",
					"description": "The user or reward filter for this schedule"
				},
				"query": {
					"type": "string",
					"title": "Query",
					"description": "The GraphQL query for building the program trigger for this schedule."
				}
			}
		}
	}
}